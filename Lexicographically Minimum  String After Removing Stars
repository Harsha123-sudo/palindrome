import java.util.*;

public class Solution {

    public String clearStars(String s) {
        int n = s.length();
        PriorityQueue<Character> pq = new PriorityQueue<>();
        Map<Character, Deque<Integer>> map = new HashMap<>();
        boolean[] keep = new boolean[n];
        Arrays.fill(keep, true);

        for (int i = 0; i < n; i++) {
            char c = s.charAt(i);
            if (c == '*') {
                // Remove the smallest character before this star
                if (!pq.isEmpty()) {
                    char smallest = pq.poll();
                    int indexToRemove = map.get(smallest).removeLast();
                    keep[i] = false;               // Remove '*'
                    keep[indexToRemove] = false;   // Remove smallest char
                    // Clean up map if empty
                    if (map.get(smallest).isEmpty()) {
                        map.remove(smallest);
                    }
                } else {
                    // If no chars before, just remove '*'
                    keep[i] = false;
                }
            } else {
                pq.offer(c);
                map.putIfAbsent(c, new ArrayDeque<>());
                map.get(c).add(i);
            }
        }

        StringBuilder result = new StringBuilder();
        for (int i = 0; i < n; i++) {
            if (keep[i]) {
                result.append(s.charAt(i));
            }
        }

        return result.toString();
    }

    // Main method for testing
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Solution sol = new Solution();

        System.out.println("Enter the string with stars:");
        String input = sc.nextLine();

        String output = sol.clearStars(input);
        System.out.println("Output after removing stars and smallest chars: " + output);

        sc.close();
    }
}
